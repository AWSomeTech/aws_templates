files:
  "/etc/tomcat7/jmxremote.password" :
    mode: "000600"
    owner: tomcat
    group: tomcat
    content: |
      REMOVED REMOVED

  "/etc/tomcat7/jmxremote.access" :
    mode: "000600"
    owner: tomcat
    group: tomcat
    content: |
      REMOVED REMOVED
  
  "/etc/cron.d/logrotate-tomcat" :
    mode: "000755"
    owner: root
    group: root
    source: http://s3.amazonaws.com/REMOVED/logrotate-tomcat
    
  "/etc/init.d/logrotate-tomcat" :
    mode: "000755"
    owner: root
    group: root
    source: http://s3.amazonaws.com/REMOVED/logrotate-tomcat-rc
  
  "/etc/cron.hourly/logrotate-local" :
    mode: "000755"
    owner: root
    group: root
    source: http://s3.amazonaws.com/REMOVED/logrotate-local
    
  "/etc/init.d/check_cron" :
    mode: "000755"
    owner: root
    group: root
    content: |
      /home/ec2-user/check_cron.sh &

  "/home/ec2-user/check_cron.sh" :
    mode: "000755"
    owner: root
    group: root
    source: http://s3.amazonaws.com/REMOVED/check_cron.sh

  "/home/ec2-user/config_collectd.sh" :
    mode: "000755"
    owner: ec2-user
    group: ec2-user
    source: http://s3.amazonaws.com/REMOVED/config_collectd.sh
    
  "/home/ec2-user/deploy.sh" :
    mode: "000755"
    owner: ec2-user
    group: ec2-user
    source: http://s3.amazonaws.com/REMOVED/deploy.sh

  "/home/ec2-user/tn_s3_uploader.gem" :
      mode: "000755"
      owner: ec2-user
      group: ec2-user
      source: http://s3.amazonaws.com/REMOVED/tn_s3_uploader-1.2.1.gem
  
  "/home/ec2-user/honeybadger_template.json" :
    mode: "000644"
    owner: root
    group: root
    source: http://s3.amazonaws.com/REMOVED/honeybadger_template.json

  "/usr/share/tomcat7/conf/server.xml" :
    mode: "000664"
    owner: tomcat
    group: tomcat
    source: http://s3.amazonaws.com/REMOVED/server.xml

  "/etc/logrotate.conf.elasticbeanstalk.httpd" :
    mode: "000664"
    owner: root
    group: root
    source: http://s3.amazonaws.com/REMOVED/logrotate.conf.elasticbeanstalk.httpd

  "/etc/logrotate.conf.local" :
    mode: "000664"
    owner: root
    group: root
    source: http://s3.amazonaws.com/REMOVED/logrotate.conf.local

  "/etc/httpd/conf/httpd.conf" :
    mode: "000664"
    owner: root
    group: root
    source: http://s3.amazonaws.com/REMOVED/httpd.conf

  "/etc/httpd/conf.d/elasticbeanstalk.conf" :
    mode: "000644"
    owner: root
    group: root
    source: http://s3.amazonaws.com/REMOVED/elasticbeanstalk.conf

  "/etc/collectd.conf" :
    mode: "000664"
    owner: root
    group: root
    source: http://s3.amazonaws.com/REMOVED/collectd.conf

  "/usr/share/tomcat7/lib/catalina-jmx-remote.jar" :
    mode: "000644"
    owner: root
    group: root
    source: http://s3.amazonaws.com/REMOVED/catalina-jmx-remote.jar
  
  "/etc/security/limits.conf" :
    mode: "000644"
    owner: root
    group: root
    source: http://s3.amazonaws.com/REMOVED/limits.conf

  "/usr/bin/send_error" :
    mode: "000755"
    owner: root
    group: root
    source: http://s3.amazonaws.com/REMOVED/send_error

  "/usr/bin/try_s3put" :
    mode: "000755"
    owner: root
    group: root
    source: http://s3.amazonaws.com/REMOVED/try_s3put
 
  "/home/ec2-user/collectd-librato.zip" :
    mode: "000644"
    owner: root
    group: root
    source: http://s3.amazonaws.com/REMOVED/collectd-librato.zip

  "/usr/bin/mark_instance_as_unhealthy" :
    mode: "000755"
    owner: root
    group: root
    source: http://s3.amazonaws.com/REMOVED/mark_instance_as_unhealthy
    
  "/home/ec2-user/apache-tomcat-7.0.54.tar.gz" :
    mode: "000755"
    owner: root
    group: root
    source: http://s3.amazonaws.com/REMOVED/apache-tomcat-7.0.54.tar.gz

commands:
  before_deploy_install_log_rotate_deps0:
    command: SSL_CERT_FILE=/etc/pki/tls/certs/ca-bundle.crt gem install --no-ri --no-rdoc honeybadger /home/ec2-user/tn_s3_uploader.gem &> /home/ec2-user/gem-install.log
  before_deploy_install_log_rotate_deps1:
    command: ln -sf /usr/local/bin/tn_s3_uploader /usr/bin/tn_s3_uploader
  deploy:
    command: /home/ec2-user/deploy.sh &> /home/ec2-user/deploy.log
  post_deploy_restart_apache_a:
    command: apachectl -k stop
  post_deploy_restart_apache_b:
    command: sleep 5
  post_deploy_restart_apache_c:
    command: apachectl -k start
  post_deploy_0_install_collectd_librato:
    command: unzip -o collectd-librato.zip
    cwd: /home/ec2-user/
  post_deploy_1_install_collectd_librato:
    command: make install
    cwd: /home/ec2-user/collectd-librato/

container_commands:

  config_collectd:
    command: { "Fn::Join" : [ " ", [ "/home/ec2-user/config_collectd.sh $PARAM2", { "Ref": "AWSEBEnvironmentName" }, "&> /home/ec2-user/config_collectd.log" ] ] }
  get_logrotate_config:
    command: curl https://s3.amazonaws.com/REMOVED/logrotate.conf.tomcat.$PARAM2 -o /etc/logrotate.conf.tomcat
  set_logrotate_config:
    command: chmod 644 /etc/logrotate.conf.tomcat
  set_env:
    command: echo "export APPLICATION_ENVIRONMENT=$PARAM2" >> /etc/profile.d/env.sh
    
packages:
  yum: 
    collectd: []
    collectd-java: [] 
    collectd-generic-jmx: []
    git: []
    rubygem20-nokogiri.x86_64: []
    rubygem20-aws-sdk.noarch: []

option_settings:
  - option_name: com.sun.management.jmxremote
    value: true
  - option_name: com.sun.management.jmxremote.authenticate
    value: true
  - option_name: com.sun.management.jmxremote.port
    value: REMOVED
  - option_name: com.sun.management.jmxremote.ssl
    value: false
  - option_name: java.rmi.server.hostname
    value: localhost
  - option_name: com.sun.management.jmxremote.password.file
    value: /etc/tomcat7/jmxremote.password
  - option_name: com.sun.management.jmxremote.access.file
    value: /etc/tomcat7/jmxremote.access

Resources: 
  AWSEBAutoScalingGroup: 
    Type: "AWS::AutoScaling::AutoScalingGroup" 
    Properties: 
      HealthCheckType: "ELB" 
      HealthCheckGracePeriod: "360"
      AvailabilityZones: ["us-east-1b", "us-east-1e"]
  AWSEBLoadBalancer:
    Type: "AWS::ElasticLoadBalancing::LoadBalancer"
    Properties: 
      ConnectionDrainingPolicy: { "Enabled" : "true", "Timeout": "300" }
      Listeners: [ {
         "LoadBalancerPort" : "80",
         "InstancePort" : "8080" ,
         "Protocol" : "HTTP",
         "InstanceProtocol" : "HTTP"
      } ]
      AvailabilityZones: ["us-east-1b", "us-east-1e"]
      CrossZone: "true"
      AccessLoggingPolicy: { 
        "EmitInterval" : "5", 
        "Enabled" : "true", 
        "S3BucketName" : "REMOVED", 
        "S3BucketPrefix" : { "Ref": "AWSEBEnvironmentName" } 
      } 
